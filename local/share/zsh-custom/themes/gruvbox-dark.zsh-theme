# You can set following options in your .zshrc

# OS detection
[[ -n "${OS}" ]] || OS=$(uname)

# background color
BG_COLOR=%K{0}
BG_COLOR_BG0=%K{235}
BG_COLOR_BG1=%K{237}
BG_COLOR_BG2=%K{239}
BG_COLOR_BG3=%K{241}
BG_COLOR_BG4=%K{243}
BG_COLOR_FG0=%K{229}
BG_COLOR_FG1=%K{223}
BG_COLOR_FG2=%K{250}
BG_COLOR_FG3=%K{248}
BG_COLOR_FG4=%K{246}
BG_COLOR_NORMAL_RED=%K{124}
BG_COLOR_NORMAL_GREEN=%K{106}
BG_COLOR_NORMAL_YELLOW=%K{172}
BG_COLOR_NORMAL_BLUE=%K{66}
BG_COLOR_NORMAL_PURPLE=%K{132}
BG_COLOR_NORMAL_AQUA=%K{72}
BG_COLOR_NORMAL_ORANGE=%K{166}
BG_COLOR_BRIGHT_RED=%K{167}
BG_COLOR_BRIGHT_GREEN=%K{142}
BG_COLOR_BRIGHT_YELLOW=%K{214}
BG_COLOR_BRIGHT_BLUE=%K{109}
BG_COLOR_BRIGHT_PURPLE=%K{175}
BG_COLOR_BRIGHT_AQUA=%K{108}
BG_COLOR_BRIGHT_ORANGE=%K{208}

# foreground color
FG_COLOR_BG0=%F{235}
FG_COLOR_BG1=%F{237}
FG_COLOR_BG2=%F{239}
FG_COLOR_BG3=%F{241}
FG_COLOR_BG4=%F{243}
FG_COLOR_FG0=%F{229}
FG_COLOR_FG1=%F{223}
FG_COLOR_FG2=%F{250}
FG_COLOR_FG3=%F{248}
FG_COLOR_FG4=%F{246}
FG_COLOR_NORMAL_RED=%F{124}
FG_COLOR_NORMAL_GREEN=%F{106}
FG_COLOR_NORMAL_YELLOW=%F{172}
FG_COLOR_NORMAL_BLUE=%F{66}
FG_COLOR_NORMAL_PURPLE=%F{132}
FG_COLOR_NORMAL_AQUA=%F{72}
FG_COLOR_NORMAL_ORANGE=%F{166}
FG_COLOR_BRIGHT_RED=%F{167}
FG_COLOR_BRIGHT_GREEN=%F{142}
FG_COLOR_BRIGHT_YELLOW=%F{214}
FG_COLOR_BRIGHT_BLUE=%F{109}
FG_COLOR_BRIGHT_PURPLE=%F{175}
FG_COLOR_BRIGHT_AQUA=%F{108}
FG_COLOR_BRIGHT_ORANGE=%F{208}

# reset color
local RESET_COLOR=%f%k%b
local RESET=%{$RESET_COLOR%}
local RETURN_CODE="%(?..$FG_COLOR_RED%? ↵$RESET)"
local SEGMENT_START=$'%{\uE0B6%}'
local SEGMENT_END=$'%{\uE0B4%}'
local ARROW_SYMBOL=$'%{\uE0B4%}'
local ARROW_RIGHT=$'%{\uE0B6%}'
local ZSH_TIME=%D{%H:%M}
local PADDING=''

if [ $OS = "Darwin" ]; then
	local LOGO=""
else
	local LOGO="🐧"
fi

GIT_DIRTY_COLOR=%F{196}
GIT_CLEAN_COLOR=%F{118}
GIT_PROMPT_INFO=%F{012}

ZSH_THEME_GIT_PROMPT_PREFIX="  "
ZSH_THEME_GIT_PROMPT_SUFFIX="$GIT_PROMPT_INFO"
ZSH_THEME_GIT_PROMPT_DIRTY=" $GIT_DIRTY_COLOR✘"
ZSH_THEME_GIT_PROMPT_CLEAN=" $GIT_CLEAN_COLOR✔"

ZSH_THEME_GIT_PROMPT_ADDED="%F{082}✚%f"
ZSH_THEME_GIT_PROMPT_MODIFIED="%F{166}✹%f"
ZSH_THEME_GIT_PROMPT_DELETED="%F{160}✖%f"
ZSH_THEME_GIT_PROMPT_RENAMED="%F{220]➜%f"
ZSH_THEME_GIT_PROMPT_UNMERGED="%F{082]═%f"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{190]✭%f"

# option defaults
[[ -n "$ZSH_POWERLINE_SHOW_USER" ]]             || ZSH_POWERLINE_SHOW_USER=true
[[ -n "$ZSH_POWERLINE_SHOW_IP" ]]               || ZSH_POWERLINE_SHOW_IP=true
[[ -n "$ZSH_POWERLINE_SHOW_OS" ]]               || ZSH_POWERLINE_SHOW_OS=true
[[ -n "$ZSH_POWERLINE_SHOW_TIME" ]]             || ZSH_POWERLINE_SHOW_TIME=false
[[ -n "$ZSH_POWERLINE_SINGLE_LINE" ]]           || ZSH_POWERLINE_SINGLE_LINE=true
[[ -n "$ZSH_POWERLINE_SHOW_GIT_STATUS" ]]       || ZSH_POWERLINE_SHOW_GIT_STATUS=true
[[ -n "$ZSH_POWERLINE_SHOW_GIT_BRANCH_ONLY" ]]  || ZSH_POWERLINE_SHOW_GIT_BRANCH_ONLY=false
[[ -n "$ZSH_POWERLINE_SHOW_RETURN_CODE" ]]      || ZSH_POWERLINE_SHOW_RETURN_CODE=true
[[ -n "$ZSH_POWERLINE_DIRECTORY_DEPTH" ]]       || ZSH_POWERLINE_DIRECTORY_DEPTH=2
[[ -n "$POWERLINE_RIGHT_A" ]]                   || POWERLINE_RIGHT_A="date"
[[ -n "$POWERLINE_DATE_FORMAT" ]]               || POWERLINE_DATE_FORMAT="%D{%Y-%m-%d %V}"
[[ -n "$POWERLINE_HIDE_GIT_PROMPT_STATUS" ]]    || POWERLINE_HIDE_GIT_PROMPT_STATUS="true"


# username @ hotname segment
PROMPT="
${FG_COLOR_BG0}${SEGMENT_START}"
PROMPT="${PROMPT}${FG_COLOR_FG1}${BG_COLOR_BG0}%n"
PROMPT="${PROMPT}${FG_COLOR_NORMAL_BLUE}${BG_COLOR_BG0} @ "
PROMPT="${PROMPT}${FG_COLOR_FG1}${BG_COLOR_BG0}%m"
PROMPT="${PROMPT} ${FG_COLOR_BG0}${BG_COLOR_NORMAL_BLUE}${SEGMENT_END}"

# current directory (%E hightline all line to end)
DIRECTORY_DEPTH="%${ZSH_POWERLINE_DIRECTORY_DEPTH}~"
PROMPT="${PROMPT}${FG_COLOR_BG0}${BG_COLOR_NORMAL_BLUE} ${DIRECTORY_DEPTH}"

# show git status
if [ $POWERLINE_HIDE_GIT_PROMPT_STATUS = true ]; then
	PROMPT="${PROMPT}"''
elif [ $ZSH_POWERLINE_SHOW_GIT_BRANCH_ONLY = true ]; then
	# get git branch function
	git_branch() {
		git rev-parse --git-dir > /dev/null 2>&1
		if [ "$?" = "0" ]; then
			BRANCH=$(git branch | grep '*' | cut -d' ' -f2-)
			echo ${ZSH_THEME_GIT_PROMPT_PREFIX}${BRANCH}
		fi
	}
	PROMPT="${PROMPT}"'$(git_branch)'
elif [ $ZSH_POWERLINE_SHOW_GIT_STATUS = true ]; then
	PROMPT="${PROMPT}"'$(git_prompt_info)'
fi

# single line or double lines
if [ $ZSH_POWERLINE_SINGLE_LINE = false ]; then
	PROMPT="${PROMPT} %E
  ${RESET}${FG_COLOR_BASE01}${ARROW_SYMBOL}"
else
	PROMPT="${PROMPT} ${RESET}${FG_COLOR_NORMAL_BLUE}${ARROW_SYMBOL}"
fi

# reset
PROMPT="$PROMPT ${RESET} "

if [ $ZSH_POWERLINE_SHOW_RETURN_CODE = true ]; then
	RPROMPT="${RETURN_CODE}"
fi


# right prompt

#ZLE_RPROMPT_INDENT=0

if [ "$POWERLINE_DATE_FORMAT" = "" ]; then
  POWERLINE_DATE_FORMAT=%D{%Y-%m-%d}
fi

if [ "$POWERLINE_RIGHT_B" = "" ]; then
  POWERLINE_RIGHT_B=%D{%H:%M:%S}
elif [ "$POWERLINE_RIGHT_B" = "none" ]; then
  POWERLINE_RIGHT_B=""
fi

if [ "$POWERLINE_RIGHT_A" = "mixed" ]; then
  POWERLINE_RIGHT_A=%(?."$POWERLINE_DATE_FORMAT".%F{red}✘ %?)
elif [ "$POWERLINE_RIGHT_A" = "exit-status" ]; then
  POWERLINE_RIGHT_A=%(?.%F{green}✔ %?.%F{red}✘ %?)
elif [ "$POWERLINE_RIGHT_A" = "date" ]; then
  POWERLINE_RIGHT_A="$POWERLINE_DATE_FORMAT"
fi

if [ "$POWERLINE_RIGHT_A_COLOR_FRONT" = "" ]; then
  POWERLINE_RIGHT_A_COLOR_FRONT="black"
fi


if [ "$POWERLINE_RIGHT_A_COLOR_BACK" = "" ]; then
  POWERLINE_RIGHT_A_COLOR_BACK="cyan"
fi


if [ "$POWERLINE_DISABLE_RPROMPT" = "" ]; then
    if [ "$POWERLINE_RIGHT_A" = "" ]; then
        RPROMPT="$POWERLINE_GIT_INFO_RIGHT%F{white}"${ARROW_RIGHT}"%k%F{black}%K{white} $POWERLINE_RIGHT_B %f%k"
    elif [ "$POWERLINE_RIGHT_B" = "" ]; then
        RPROMPT="$POWERLINE_GIT_INFO_RIGHT%F{white}"${ARROW_RIGHT}"%k%F{$POWERLINE_RIGHT_A_COLOR_FRONT}%K{$POWERLINE_RIGHT_A_COLOR_BACK} $POWERLINE_RIGHT_A %f%k"
    else
        RPROMPT="$POWERLINE_GIT_INFO_RIGHT%F{white}"${ARROW_RIGHT}"%k%F{black}%K{white} $POWERLINE_RIGHT_B %f%F{$POWERLINE_RIGHT_A_COLOR_BACK}"${ARROW_RIGHT}"%f%k%K{$POWERLINE_RIGHT_A_COLOR_BACK}%F{$POWERLINE_RIGHT_A_COLOR_FRONT} $POWERLINE_RIGHT_A "
    fi
fi
